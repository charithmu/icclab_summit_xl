# More info -> http://wiki.ros.org/global_planner

base_global_planner: global_planner/GlobalPlanner

GlobalPlanner:
    planner_frequency:                 1.0
    planner_patience:                  0.0
    orientation_mode:                  1      # How to set the orientation of each point (None=0, Forward=1, Interpolate=2, ForwardThenInterpolate=3, Backward=4, Leftward=5, Rightward=6)      
    # 1 = Positive x axis points along path, except for the goal orientation
    # orientation filter (param orientation_mode) is a post-processing step where an orientation is added to the points on the global path
    # move_base node crashes if set to 2 and planner fails
    
    old_navfn_behavior:                false  # Exactly mirror behavior of navfn, use defaults for other boolean parameters, default false
    use_quadratic:                     true   # Use the quadratic approximation of the potential. Otherwise, use a simpler calculation, default true
    use_dijkstra:                      true   # Use dijkstra's algorithm. Otherwise, A*, default true
    use_grid_path:                     false  # Create a path that follows the grid boundaries. Otherwise, use a gradient descent method, default false
    
    allow_unknown:                     false  # default: true | Specifies whether or not to allow the planner to create plans that traverse unknown space.
    # Needs to have track_unknown_space: true in the obstacle / voxel layer (in costmap_commons_param) to work
    # NOTE: if you are using a layered costmap_2d costmap with a voxel or obstacle layer, 
    # you must also set the track_unknown_space param for that layer to be true, 
    # or it will convert all your unknown space to free space (which planner will then happily go right through).
    planner_window_x:                  0.0    # default 0.0
    planner_window_y:                  0.0    # default 0.0
    default_tolerance:                 0.0    # If goal in obstacle, plan to the closest point in radius default_tolerance, default 0.0
    # A tolerance on the goal point for the planner. The planner will attempt to create a plan that is as close to the specified goal as possible but no further than default_tolerance away.
    
    publish_scale:                     100    # Scale by which the published potential gets multiplied, default 100
    planner_costmap_publish_frequency: 0.0    # default 0.0
    
    lethal_cost:                       253    # default 253
    neutral_cost:                      66     # default 50
    cost_factor:                       0.55   # Factor to multiply each cost from costmap by, default 3.0
    publish_potential:                 true   # Publish Potential Costmap (this is not like the navfn pointcloud2 potential), default true

    # Other params
    ##################
    # visualize_potential:               false  # default: false | Specifies whether or not to visualize the potential area computed via a PointCloud2. 
    # orientation_window_size:           1      # default: 1 | What window to use to determine the orientation based on the position derivative specified by the orientation mode
    # outline_map:                       true   # default: true | Outlines the global costmap with lethal obstacles. For the usage of a non static (rolling window) global costmap this needs to be set to false
