# description of params http://wiki.ros.org/costmap_2d/hydro/obstacles
# good read on ROS nav stack http://kaiyuzheng.me/documents/navguide.pdf
max_obstacle_height: 1.5      # set to slightly higher than robot height

# footprint: [ [ 0.35, -0.3 ], [ 0.35, 0.3 ], [ -0.35, 0.3 ], [ -0.35, -0.3 ] ]
footprint: [[0.45,-0.3],[0.45,0.3],[-0.45,0.3],[-0.45,-0.3]]
robot_radius:        0.0 # set one of footprint or robot_radius

#map_type: voxel # set to 'costmap' if do not want to do 3d ray tracing (no 3d camera)


# NOTE: order of layers matter!
static_layer:
    enabled: true


obstacle_3d_layer:
    enabled:                  true
    voxel_decay:              5      # seconds if linear, e^n if exponential
    decay_model:              0      # 0=linear, 1=exponential, -1=persistent
    voxel_size:               0.05   # meters
    track_unknown_space:      true   # default space is unknown
    observation_persistence:  0.0  # seconds
    unknown_threshold:        15     # number of unknown cells allowed in a column considered to be ”known”
    mark_threshold:           0      # maximum number of marked cells allowed in a column considered to be ”free”
    update_footprint_enabled: true
    combination_method:       1      # 1=overwrite, 0=largest
    obstacle_range:           3.0    # range at which to mark obstacles in meters
    origin_z:                 0.0    # z origin of the map in meters
    publish_voxel_map:        false  # set to 'true' for debugging, enabled through `debug_mode:=true` in complete
    transform_tolerance:      0.2    # seconds
    mapping_mode:             false  # default off, saves map not for navigation
    map_save_duration:        60     # default 60s, how often to autosave
    # sensor params
    observation_sources:      camera_front_mark camera_front_clear
    camera_front_mark:
        data_type:               PointCloud2
        topic:                   /summit_xl/front_rgbd_camera/depth/points
        marking:                 true               # true, use this sensor data to mark obstacles on costmap
        clearing:                false             # true, use this sensor data to clear obstalces on costmap
        min_obstacle_height:     0.04
        max_obstacle_height:     2.0
        expected_update_rate:    1.5   # expected period between each consecutive message (set to ~twice expect)
        observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
        inf_is_valid:            false         # default false, for laser scans
        clear_after_reading:     true   # default false, clear the buffer after the layer gets readings from it
        voxel_filter:            true          # default off, apply voxel filter to sensor, recommend on
    camera_front_clear:
        data_type:            PointCloud2
        topic:                /summit_xl/front_rgbd_camera/depth/points
        marking:              false
        clearing:             true
        min_z:                0.1                  # default 0, meters
        max_z:                7.0                  # default 10, meters
        vertical_fov_angle:   0.7     # default 0.7, radians
        horizontal_fov_angle: 1.04  # default 1.04, radians
        decay_acceleration:   1.      # default 0, 1/s^2. If laser scanner MUST be 0
        model_type:           0               # default 0 (depth camera). Use 1 for 3D Lidar


obstacle_2d_layer:
    enabled:             true
    combination_method:  1         # 0=overwrite, 1=maximum, 99=nothing
    track_unknown_space: true
    obstacle_range:      2.5
    raytrace_range:      6.1           # range at which to ray trace obstacles for marking/clearing (should be higher than max range of sensor)
    
    # sensor params
    observation_sources: scan_front scan_rear
    scan_front:
        data_type:            LaserScan
        topic:                /scan_front
        marking:              true
        clearing:             true
        inf_is_valid:         true          # set to true if sensor returns 'inf' for invalid measurements
        expected_update_rate: 0.5
    scan_rear:
        data_type:            LaserScan
        topic:                /scan_rear
        marking:              true
        clearing:             true
        inf_is_valid:         true
        expected_update_rate: 0.5


inflation_layer:
    enabled:             true
    cost_scaling_factor: 2.58     # exponential rate at which the obstacle cost drops off (default: 10)
    inflation_radius:    1.5      # max. distance from an obstacle at which costs are incurred for planning paths.
